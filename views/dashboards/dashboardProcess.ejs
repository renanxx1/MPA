<%- include ('../partials/header.ejs')%>
    <link rel="stylesheet" href="/assets/vendors/iconfonts/mdi/css/materialdesignicons.min.css">
    <link rel="stylesheet" href="/assets/css/shared/style.css">
    <link rel="stylesheet" href="/assets/css/demo_1/style.css">
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <%- include ('../partials/navbar.ejs')%>

        <div id="layoutSidenav_content">
            <main>
                <div class="container-fluid">
                    <h1 class="mt-3 display-6">Dashboard <%=collaborator.process.process_name%>
                    </h1>
                    <h5 class="display-6">
                        <%=collaborator.collaborator_name%>
                    </h5>

                    <div class="row page-title-header">
                        <div class="page-header mb-1 mt-0">
                        </div>

                        <div class="col-md-12">

                            <small id="smallDateInfo" style="color: red;"></small>

                            <div class="page-header-toolbar">

                                <div class="btn-group toolbar-item" role="group" aria-label="Basic example">

                                    <button type="button" id="btnLastDate" class="btn btn-secondary rounded"><i
                                            class="mdi mdi-chevron-left"></i></button>

                                    <button type="button" id="btnDate" name="date" class="btn btn-secondary"></button>

                                    <button type="button" id="btnNextDate" class="btn btn-secondary rounded"><i
                                            class="mdi mdi-chevron-right"></i></button>
                                    <br>

                                </div>

                                <div class="filter-wrapper">
                                    <div class="dropdown ml-lg-auto ml-3 toolbar-item">
                                        <button id="dropMain" class="btn btn-secondary dropdown-toggle" type="button"
                                            data-toggle="dropdown" aria-haspopup="true"
                                            aria-expanded="false">Hoje</button>
                                        <div class="dropdown-menu" aria-labelledby="userDropdown">
                                            <a id="a1" class="dropdown-item" href="#">Hoje</a>
                                            <a id="a2" class="dropdown-item" href="#">Ontem</a>
                                            <a id="a3" class="dropdown-item" href="#">Ultimos 7 Dias</a>
                                            <a id="a4" class="dropdown-item" href="#">Ultimos 30 Dias</a>
                                            <a id="a5" class="dropdown-item" href="#">Este Mes</a>
                                            <a id="a6" class="dropdown-item" href="#">Mes Passado</a>
                                        </div>

                                    </div>

                                </div>


                                <!--   <button type="button" class="btn btn-secondary ml-3">Localizar</button> -->
                                <div class="dropdown ml-lg-auto ml-3 toolbar-item">
                                    <button class="btn btn-secondary dropdown-toggle" type="button"
                                        data-toggle="dropdown" aria-haspopup="true"
                                        aria-expanded="false">Exportar</button>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="userDropdown">
                                        <a id="pdf" class="dropdown-item" href="#">Exportar para PDF</a>
                                        <a class="dropdown-item" href="#">Exportar para Excel</a>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>

                    <div id="mainDiv" class="row">

                        <div class="col-xl-6">
                            <div class="card mb-4">
                                <div id="processCounter" class="card-header mb-2">
                                    <i class="fas fa-chart-bar mr-1"></i>
                                </div>

                                <canvas id="myAreaChart" width="82%" height="30"></canvas>
                                <div class="card-footer text-center mt-2">
                                    <h2 id="processCounterValue" class="mb-0 mt-0 mx-auto"
                                        style="color: rgb(28,28,28);">
                                    </h2>
                                </div>
                            </div>
                        </div>

                        <div class="col-xl-6">
                            <div class="card mb-4">
                                <div class="card-header">
                                    <i class="fas fa-chart-bar mr-1"></i>
                                    Produtividade


                                    <button type="button" class="btn btn-default btn-sm dropdown float-right "
                                        data-toggle="dropdown"> <i class="mx-auto zmdi zmdi-filter-list"></i>
                                    </button>

                                    <ul id="filterList" class="dropdown-menu checkbox-menu allow-focus">
                                        <!-- 
                                        <li class="small">
                                            <label>
                                                <input type="checkbox" value="Cheese">
                                            </label>
                                        </li> -->

                                    </ul>
                                </div>

                                <canvas id="myPieChart"></canvas>
                                <div class="card-footer text-center mt-2">
                                    <h2 id="efficiencyValue" class="mb-0 mt-0 mx-auto" style="color: rgb(28,28,28);">
                                    </h2>
                                </div>
                            </div>

                        </div>

                        <div class="col-xl-12">
                            <div class="card mb-4">

                                <div class="card-header mb-2">
                                    <i class="fas fa-chart-bar mr-1"></i>
                                    Tempo das Atividades
                                    <div class="float-right">
                                        <div class="btn-group btn-toggle">
                                            <button onclick="buttonOnOff()" id="buttonOn" class="btn btn-xs btn-primary"
                                                data-toggle="tooltip" data-placement="bottom"
                                                title="Exibir/Ocultar Tempo Ocioso">ON</button>
                                            <button onclick="buttonOnOff()" id="buttonOff"
                                                class="btn btn-xs btn-default" data-toggle="tooltip"
                                                data-placement="bottom" title="Exibir/Ocultar Tempo Ocioso">OFF</button>
                                        </div>
                                    </div>
                                </div>
                                <div class="card-body">
                                    <canvas id="myBarChart" width="100%" height="40"></canvas>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div id="divNoData" class="mx-auto text-center mb-0 mt-0" style="display: none;">
                        <br>
                        <h3>Sem dados disponiveis nesta data</h3>
                        <img class="img-fluid mb-4" src="../../assets/img/nodata.png">
                    </div>

                </div>
            </main>
            <%- include ('../partials/footer.ejs')%>
        </div>

        </html>

        <link href="https://gitcdn.github.io/bootstrap-toggle/2.2.2/css/bootstrap-toggle.min.css" rel="stylesheet">
        <script src="https://gitcdn.github.io/bootstrap-toggle/2.2.2/js/bootstrap-toggle.min.js"></script>
        <script src="/js/socket.io.js"></script>
        <script src="/js/moment.min.js"></script>
        <script src="/js/daterangepicker.min.js"></script>
        <script src="/datepicker/datepicker.js"></script>
        <script src="/assets/chart/Chart.min.js"></script>
        <script src="/assets/chart/chartjs-plugin-datalabels.min.js"></script>


        <script>
            var url_atual = window.location.href.split('/');
            var url = url_atual[2];
            var socket = io(url);
            console.log(url)
        </script>

        <script>

            function dataChart(action) {
                var date1 = $('#btnDate').data('daterangepicker').startDate.format('YYYY-MM-DD');
                var date2 = $('#btnDate').data('daterangepicker').endDate.format('YYYY-MM-DD');

                socket.emit('getDataChart', {
                    startDate: date1,
                    endDate: date2,
                    collaborator_id: '<%=collaborator.id%>',
                    process_id: '<%=collaborator.process.id%>',
                    action: action
                });
            }
        </script>

        <script>
            function formatTime(secs) {
                var hours = Math.floor(secs / (60 * 60));
                var divisor_for_minutes = secs % (60 * 60);
                var minutes = Math.floor(divisor_for_minutes / 60);
                var divisor_for_seconds = divisor_for_minutes % 60;
                var seconds = Math.ceil(divisor_for_seconds);
                return +hours + ":" + minutes + ":" + seconds;
            }


            function convert(time) {
                var hrs = ~~(time / 3600);
                var mins = ~~((time % 3600) / 60);
                var secs = ~~time % 60;

                var ret = "";
                if (hrs > 0) {
                    ret += "" + hrs + ":" + (mins < 10 ? "0" : "");
                }
                ret += "" + mins + ":" + (secs < 10 ? "0" : "");
                ret += "" + secs;
                return ret;
            }

            function convertDate(date) {
                var d = date.split("-");
                return d[2] + "/" + d[1] + "/" + d[0];
            }

            function convertToTimeFormat(element) {
                var time;
                if (Object.keys(element).length == 1) {
                    return time = "00:00:0" + element;
                }
                if (Object.keys(element).length == 2) {
                    return time = "00:00:" + element;
                }
                if (Object.keys(element).length == 3) {
                    return time = "00:" + "0" + element.slice(0, 1) + ":" + element.slice(1, 3);
                }
                if (Object.keys(element).length == 4) {
                    return time = "00:" + element.slice(0, 2) + ":" + element.slice(2, 4);
                }
                if (Object.keys(element).length == 5) {
                    return time = "0" + element.slice(0, 1) + ":" + element.slice(1, 3) + ":" + element.slice(3, 5);
                }
                if (Object.keys(element).length == 6) {
                    return time = element.slice(0, 2) + ":" + element.slice(2, 4) + ":" + element.slice(4, 6);
                }
                if (Object.keys(element).length == 7) {
                    return time = element.slice(0, 3) + ":" + element.slice(3, 5) + ":" + element.slice(5, 7);
                }
            }

            /*-----------------------------------------------------------------------------------------------------------*/
            //BAR CHART - GRAFICO 1
            var ctx = document.getElementById("myBarChart");
            var myBarChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: [],
                    datasets: [{
                        label: "Valor",
                        backgroundColor: "rgba(2,117,216,1)",
                        borderColor: "rgba(2,117,216,1)",
                        data: [],
                        hoverBackgroundColor: []
                    }],
                },
                plugins: [ChartDataLabels],
                options: {
                    responsive: true,

                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function (tooltipItem, data) {
                                    return new Date(tooltipItem.raw * 1000).toISOString().substr(11,
                                        8);
                                },
                            },
                        },
                        datalabels: {
                            anchor: 'end',
                            align: 'top',
                            color: 'rgb(112, 118, 144)',
                            formatter: function (value, context) {
                                if (value != 0) {
                                    return new Date(value * 1000).toISOString().substr(11, 8);
                                } else {
                                    value = " "
                                    return value;
                                }
                            },
                            font: {
                                weight: 'bold'
                            }
                        }
                    },
                    scales: {
                        x: {
                            time: {
                                unit: 'month'
                            },
                            gridLines: {
                                display: false
                            },
                        },
                        y: {
                            ticks: {
                                min: 0,
                                suggestedMax: 36000,
                                stepSize: 3600,
                                beginAtZero: true,
                                callback: function (label, index, labels) {
                                    return convert(label);
                                },
                            },
                        },
                    },
                }
            });


            /*-----------------------------------------------------------------------------------------------------------*/
            // AREA CHART - GRAFICO  2
            var ctx = document.getElementById("myAreaChart");
            var myLineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: "Valor",
                        lineTension: 0.3,
                        backgroundColor: "rgba(2,117,216,0.2)",
                        borderColor: "rgba(2,117,216,1)",
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(2,117,216,1)",
                        pointBorderColor: "rgba(255,255,255,0.8)",
                        pointHoverRadius: 5,
                        pointHoverBackgroundColor: "rgba(2,117,216,1)",
                        pointHitRadius: 50,
                        pointBorderWidth: 2,
                        data: [],
                    }],
                },
                plugins: [ChartDataLabels],
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            display: false
                        },
                        datalabels: {
                            display: false,
                        },
                    },
                    scales: {
                        x: {
                            time: {
                                unit: 'date'
                            },
                            gridLines: {
                                display: false
                            },
                        },
                        y: {
                            beginAtZero: true,
                            ticks: {
                                min: 0,
                                suggestedMax: 30,
                                maxTicksLimit: 5,

                            },
                            gridLines: {
                                color: "rgba(0, 0, 0, .125)",
                            }
                        },
                    },
                }
            });


            /*-----------------------------------------------------------------------------------------------------------*/
            // Pie Chart Example - GRAFICO 3
            var ctx = document.getElementById("myPieChart");
            var myPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: [],
                    datasets: [{
                        data: [],
                        backgroundColor: ['rgb(70, 952, 0)', 'rgba(2,117,216,1)'],
                        hoverBackgroundColor: ['rgb(70, 952, 0)', 'rgba(2,117,216,1)']
                    }],
                },
                plugins: [ChartDataLabels],
                options: {
                    responsive: true,
                    aspectRatio: 2.649,
                    plugins: {
                        tooltip: {
                            callbacks: {
                                title: function (tooltipItem, data) {
                                    return tooltipItem[0].label
                                },
                                label: function (tooltipItem, data) {
                                    var totalNumberOfSeconds = tooltipItem.raw;
                                    var hours = parseInt(totalNumberOfSeconds / 3600);
                                    var minutes = parseInt((totalNumberOfSeconds - (hours * 3600)) / 60);
                                    var seconds = Math.floor((totalNumberOfSeconds - ((hours * 3600) + (minutes * 60))));
                                    var result = (hours < 10 ? "0" + hours : hours) + ":" + (minutes < 10 ? "0" + minutes : minutes) + ":" + (seconds < 10 ? "0" + seconds : seconds);
                                    return result
                                },
                            },
                        },
                        datalabels: {
                            align: 'center',
                            color: 'black',
                            formatter: function (value, context) {
                                var totalNumberOfSeconds = value;
                                var hours = parseInt(totalNumberOfSeconds / 3600);
                                var minutes = parseInt((totalNumberOfSeconds - (hours * 3600)) / 60);
                                var seconds = Math.floor((totalNumberOfSeconds - ((hours * 3600) + (minutes * 60))));
                                var result = (hours < 10 ? "0" + hours : hours) + ":" + (minutes < 10 ? "0" + minutes : minutes) + ":" + (seconds < 10 ? "0" + seconds : seconds);
                                return result
                            },
                            font: {
                                weight: 'bold'
                            }
                        }
                    },
                }
            });


            socket.on("chartData", (data) => {
                if (data == null) {
                    $('#divNoData').show();
                    $('#mainDiv').hide();
                    $('#smallDateInfo').html("");
                } else {
                    $('#mainDiv').show();
                    $('#divNoData').hide();

                    if (data.chronometers[0].min_date != $('#btnDate').data('daterangepicker').startDate.format('YYYY-MM-DD') || data.chronometers[0].max_date != $('#btnDate').data('daterangepicker').endDate.format('YYYY-MM-DD')) {
                        var d1 = data.chronometers[0].min_date.split("-");
                        var d2 = data.chronometers[0].max_date.split("-");

                        $('#smallDateInfo').html("Exibindo os dados de: " + d1[2] + "/" + d1[1] + "/" + d1[0] + " - " + d2[2] + "/" + d2[1] + "/" + d2[0]);
                    } else {
                        $('#smallDateInfo').html("");
                    }



                    /*-----------------------------------------------------------------------------------------------------------*/
                    //CARREGANDO DADOS NO GRAFICO DE BARRAS - 1

                    data.chronometers.forEach(element => {
                        var a = convertToTimeFormat(element.total_time).split(':'); //atividades
                        var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
                        myBarChart.data.labels.push(element.activity_name);
                        myBarChart.data.datasets[0].data.push(seconds);
                    })

                    var a = convertToTimeFormat(data.idleTime[0].total_time_idle).split(':'); //tempo ocioso
                    var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
                    myBarChart.data.labels.push("Tempo Ocioso");
                    myBarChart.data.datasets[0].data.push(seconds);

                    myBarChart.update()
                    /*-----------------------------------------------------------------------------------------------------------*/


                    /*-----------------------------------------------------------------------------------------------------------*/
                    //CARREGANDO DADOS NO GRAFICO DE LINHAS - 2
                    var sum_counter = 0;
                    data.process_counter.forEach(element => {
                        myLineChart.data.labels.push(convertDate(element.createdAt));
                        myLineChart.data.datasets[0].data.push(element.counter)
                        sum_counter = sum_counter + element.counter;
                    })

                    $('#processCounter').html('<i class="fas fa-chart-bar mr-1"></i>' + data.process_counter[0].process_counter)
                    $('#processCounterValue').html("Total " + data.process_counter[0].process_counter + " " + sum_counter)

                    myLineChart.update();
                    /*-----------------------------------------------------------------------------------------------------------*/


                    /*-----------------------------------------------------------------------------------------------------------*/
                    //CARREGANDO DADOS NO GRAFICO DE TORTA - 3
                    myPieChart.data.datasets[0].data = []; //Zerando data pois esta retornando NaN
                    var soma = 0;

                    data.chronometers.forEach(element => {
                        $('#filterList').append('<li class="small"><label> <input type="checkbox" id="' + element.activity_id + '"' + 'value="' + element.activity_name + '"' + '  checked>' + element.activity_name + '</label></li>')
                        var a = convertToTimeFormat(element.total_time).split(':');
                        var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
                        soma = soma + seconds;
                    })

                    var work_time = data.chronometers[0].sum_work_time * 3600;
                    var efficiency = (soma / work_time) * 100;

                    myPieChart.data.labels.push('Tempo Total Executado', 'Horario de Trabalho');
                    myPieChart.data.datasets[0].data.push(soma, work_time)

                    myPieChart.update();
                    $('#efficiencyValue').html("Eficiencia Total " + efficiency.toFixed(0) + "%");


                    //Botao de filtrar
                    $('.dropdown-menu li input').on('click', function (event) {

                        var index = myBarChart.data.labels.indexOf($(this).val());
                        var value = myBarChart.data.datasets[0].data[index];

                        if ($(this).prop('checked') == true) {
                            myPieChart.data.datasets[0].data[0] = myPieChart.data.datasets[0].data[0] + value;
                        } else {
                            myPieChart.data.datasets[0].data[0] = myPieChart.data.datasets[0].data[0] - value;
                        }

                        var efficiency = (myPieChart.data.datasets[0].data[0] / myPieChart.data.datasets[0].data[1]) * 100;
                        $('#efficiencyValue').html("Eficiencia Total " + efficiency.toFixed(0) + "%");
                        myPieChart.update();

                    })
                    /*-----------------------------------------------------------------------------------------------------------*/
                }
            })


            //Sempre que houver novos dados, atualiza o grafico
            socket.on("newDataAvailable", (newDataChart) => {
                if ($('#btnDate').data('daterangepicker').startDate.format('DD/MM/YYYY') == moment().format('DD/MM/YYYY') && $('#btnDate').data('daterangepicker').endDate.format('DD/MM/YYYY') == moment().format('DD/MM/YYYY')) {

                    /*-----------------------------------------------------------------------------------------------------------*/
                    //ATUALIZANDO DADOS NO GRAFICO DE LINHAS
                    if (newDataChart.process_counter != null && newDataChart.collaborator_id == '<%=collaborator.id%>') {
                        $('#processCounterValue').html("Total " + newDataChart.process_counter_name + " " + newDataChart.process_counter)
                        myLineChart.data.datasets[0].data[0] = newDataChart.process_counter;
                        myLineChart.update();
                    }
                    /*-----------------------------------------------------------------------------------------------------------*/


                    /*-----------------------------------------------------------------------------------------------------------*/
                    //ATUALIZANDO DADOS NO GRAFICO DE BARRAS - 1
                    var backColor = []
                    var hoverColor = []
                    myBarChart.data.labels.forEach((element) => { //cria um array para trocar a cor da barra do indice
                        backColor.push('rgba(2,117,216,1)');
                        hoverColor.push('rgba(3,117,216,1)');
                    })

                    //Altera cor da barra que esta rodando
                    myBarChart.data.datasets[0].hoverBackgroundColor = hoverColor;
                    myBarChart.data.datasets[0].backgroundColor = backColor;

                    //Localiza o indice da barra que esta rodando
                    var index = myBarChart.data.labels.indexOf(newDataChart.activity_name);

                    //se o id enviado no socket io for igual ao id da pagina, atualiza os dados
                    if (newDataChart.collaborator_id == '<%=collaborator.id%>') {

                        var hms = newDataChart.time;
                        var a = hms.split(':');
                        var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);

                        myBarChart.data.datasets[0].data[index] = seconds;
                        myBarChart.data.datasets[0].backgroundColor[index] = 'rgb(70, 952, 0)';
                        myBarChart.data.datasets[0].hoverBackgroundColor[index] = 'lime';

                        myBarChart.update()
                    }
                    /*-----------------------------------------------------------------------------------------------------------*/




                    /*-----------------------------------------------------------------------------------------------------------*/
                    //ATUALIZANDO DADOS NO GRAFICO DE PIZZA - 3
                    if (newDataChart.collaborator_id == '<%=collaborator.id%>') {

                        if (newDataChart.activity_id != null && $('#' + newDataChart.activity_id).prop("checked")) {
                            myPieChart.data.datasets[0].data[0] = myPieChart.data.datasets[0].data[0] + 1;

                            var work_time = newDataChart.work_time * 3600;
                            var efficiency = (myPieChart.data.datasets[0].data[0] / work_time) * 100;
                            $('#efficiencyValue').html("Eficiencia Total " + efficiency.toFixed(0) + "%")
                            myPieChart.update()

                        }
                    }
                    /*-----------------------------------------------------------------------------------------------------------*/
                }
            })




            socket.on('collaboratorOff', (data) => {
                if (data.collaborator_id == '<%=collaborator.id%>') {
                    myBarChart.data.labels.forEach(element => {
                        console.log(element)
                    })

                    for (var i = 0; i < myBarChart.data.labels.length; i++) {
                        myBarChart.data.datasets[0].backgroundColor[i] = 'rgb(2,117,216,1)';
                        myBarChart.data.datasets[0].hoverBackgroundColor[i] = 'rgb(2,117,216,1)';
                    }
                    myBarChart.update()
                }
            })


        </script>


        <script>
            $('.btn-toggle').click(function () {
                $(this).find('.btn').toggleClass('btn-primary');
            });


            function buttonOnOff() {
                var index = myBarChart.data.labels.indexOf("Tempo Ocioso");

                dataChart(0);
                socket.on("chartDataIdle", (data) => {
                    var idle_time = convertToTimeFormat(data.idleTime[0].total_time_idle)

                    if (index != -1) {
                        myBarChart.data.datasets[0].data.splice(index, 1);
                        myBarChart.data.labels.splice(index, 1);
                    }
                    if (index == -1) {
                        myBarChart.data.labels.push("Tempo Ocioso");
                        var hms = idle_time;
                        var a = hms.split(':');
                        var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
                        myBarChart.data.datasets[0].data.push(seconds);
                    }
                    myBarChart.update()
                })
            }
        </script>

        <script>

            $('#btnDate').bind('DOMNodeInserted', function (e) {
                /*   alert(screen.height + " " +screen.width) */

                myBarChart.data.labels = [];
                myBarChart.data.datasets[0].data = [];

                myBarChart.data.datasets[0].backgroundColor = ['rgba(2,117,216,1)'];
                myBarChart.data.datasets[0].hoverBackgroundColor = ['rgba(2,117,216,1)'];

                myLineChart.data.labels = [];
                myLineChart.data.datasets[0].data = [];

                myPieChart.data.labels = [];
                myPieChart.data.datasets[0].data[0] = [];

                $('#filterList').html("")

                dataChart(1);
            });


// myBarChart.options.scales.x.display=false;

        </script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.71/pdfmake.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.71/vfs_fonts.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/0.4.1/html2canvas.min.js"></script>

        <script>
            var sideBar = 0;
            $('#sidebarToggle').on("click", function () {
                if (sideBar == 0) {
                    sideBar = 1;
                } else {
                    sideBar = 0;
                }
            });

            $("#pdf").on("click", function () {

                html2canvas(document.getElementById('layoutSidenav_content'), {
                    onrendered: function (canvas) {
                        var data = canvas.toDataURL();
                        /*           if (screen.width < 400) {
          
                                  } else if (screen.width > 400 && screen.width < 961) {
          
           */

                        if (sideBar == 0 && screen.width > 961) {
                            var docDefinition = {
                                pageMargins: [60, 15, 165, 0],
                                content: [{
                                    image: data,
                                    width: 700,
                                }],
                                defaultStyle: {
                                    alignment: 'center',
                                },
                            };
                        } else if (sideBar == 1 && screen.width > 961) {
                            var docDefinition = {
                                pageMargins: [100, 15, 190, 0],
                                content: [{
                                    image: data,
                                    width: 700,
                                }],
                                defaultStyle: {
                                    alignment: 'center',
                                },
                            };
                        } else if (screen.width > 400 && screen.width < 961) {
                            var docDefinition = {
                                pageMargins: [0, 0, 90, 0],
                                content: [{
                                    image: data,
                                    width: 500,
                                }],
                                defaultStyle: {
                                    alignment: 'center',
                                },
                            }
                        } else if (screen.width < 400) {
                            var docDefinition = {
                                pageMargins: [0, 0, 90, 0],
                                content: [{
                                    image: data,
                                    width: 500,
                                }],
                                defaultStyle: {
                                    alignment: 'center',
                                },
                            }
                        }

                        pdfMake.createPdf(docDefinition).download("Score_Details.pdf");
                    }
                })
            })
        </script>